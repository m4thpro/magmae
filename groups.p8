pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- some group theory
-- by kisonecat
cartdata("kisonecat_algeblock_1")

blocks = {}

history = {}

function shallowcopy(orig)
    local orig_type = type(orig)
    local copy
    if orig_type == 'table' then
        copy = {}
        for orig_key, orig_value in pairs(orig) do
            copy[orig_key] = orig_value
        end
    else -- number, string, boolean, etc
        copy = orig
    end
    return copy
end

function deepercopy(orig)
   result = {}
   for pp in all(orig) do
      add( result, shallowcopy(pp) )
   end
   return result
end

function push_history()
   add( history, deepercopy(blocks) )

   while #history > 10 do
      del( history, history[1] )
   end
   
end

function pop_history()
   if #history > 0 then
      blocks = history[#history]
      del( history, history[#history] )
      return true
   end

   return false
end

sparkles = {}
sparkle_duration = 0.25

function idle_animate(sprite)
   if sprite == 3 then
      return 3 + 16*(flr(time() * 10) % 4)
   end
   
   return sprite
end

function _init_playing()
   for i = 0,15 do
      for j = 0,13 do
	 local b = mget(i,j)
	 if b != 1 then
	    if b == 5 then
	       b = b + 16 * flr(rnd(4))
	    end
	    add( blocks, { x = i*8, y = j*8, kind = b,
			   you = (b==0), top = 0, left = 0,
			   dx = 0, dy = 0,
			   push = fget( b, 0 ),
			   solid = fget( b, 1 ),
			   win = fget( b, 7 )
	    } )
	 end
      end
   end
end

function is_overlap(ax,ay,bx,by)
   if (abs(ax-bx) < 8 and abs(ay-by) < 8) then
      return true
   end

   return false
end

ga = 6
gA = 6 + 16
gB = 6 + 32
gb = 6 + 48
gC = 7
gc = 7 + 16
gBB = 39
gbb = 55

-- braid group = a^2 = b^3 = c, and c commutes
-- cancellations = { { 6, 22 }, { 22, 6 }, { 38, 54 }, { 54, 38 }, { 7, 7 }}
-- conversions = { { 6, 54, 7 }, { 54, 6, 7 }, { 22, 38, 7 }, { 38, 22, 7 } }

cancellations = { { ga, gA }, { gA, ga }, { gB, gb }, { gb, gB }, { gBB, gbb }, { gbb, gBB }, { gC, gc }, { gc, gC } }
conversions = { { ga, ga, gc }, { gb, gbb, gc }, { gbb, gb, gc }, { gA, gA, gC }, { gB, gBB, gC }, { gBB, gB, gC }, { gB, gB, gBB }, { gb, gb, gbb } }

doubles = {
   { gC, ga, ga, gC },
   { gC, gb, gb, gC },
   { gC, gbb, gbb, gC },   
   { gC, gA, gA, gC },
   { gC, gB, gB, gC },
   { gC, gBB, gBB, gC },
   { gc, ga, ga, gc },
   { gc, gb, gb, gc },
   { gc, gbb, gbb, gc },   
   { gc, gA, gA, gc },
   { gc, gB, gB, gc },
   { gc, gBB, gBB, gc }
}

function try_to_mix( block, mover )
   for pp in all(cancellations) do
      if block.kind == pp[1] and mover.kind == pp[2] then
	 del( blocks, mover )
	 del( blocks, block )
	 add( sparkles, { x = block.x, y = block.y, kind = 65, time = time(), dx = 0, dy = 0 } )
	 add( sparkles, { x = mover.x, y = mover.y, kind = 65, time = time(), dx = 0, dy = 0 } )
	 sfx(1)
	 return false
      end
   end

   for pp in all(conversions) do
      if block.kind == pp[1] and mover.kind == pp[2] then
	 block.kind = pp[3]
	 del( blocks, mover )
	 add( sparkles, { x = mover.x, y = mover.y, kind = 65, time = time(), dx = 0, dy = 0 } )
	 sfx(1)
	 return false
      end
   end

   for pp in all(doubles) do
      if block.kind == pp[1] and mover.kind == pp[2] then
	 mover.kind = pp[4]
	 block.kind = pp[3]
	 sfx(1)
	 return true
      end
   end
   
   return true
end

function try_to_move( mover )
   local stuck = false

   if (mover.push == false and mover.you == false) then
      return true
   end

   for block in all(blocks) do
      if mover != block then
	 if block.solid then
	    if is_overlap( mover.x + mover.dx, mover.y + mover.dy, block.x, block.y ) then
	       if try_to_mix( mover, block ) then
		  block.dx = mover.dx
		  block.dy = mover.dy
		  if try_to_move( block ) then
		     stuck = true
		  end
	       end
	    end
	 end
      end
   end

   return stuck
end

function _update_playing()
   -- undo button
   if (btnp(4)) then
      if pop_history() then
	 sfx(4)
      else
	 sfx(3)
      end
      return
   end

   local about_to_move = false
   
   for block in all(blocks) do
      if block.you then
	 if (block.dx == 0) and (block.dy == 0) then
	    if (btnp(0) or btnp(1) or btnp(2) or btnp(3)) then
	       push_history()
	       about_to_move = true
	    end
	    
	    local speed = 2

	    if (btnp(0)) then block.dx=-speed end
	    if (btnp(1)) then block.dx= speed end
	    if (btnp(2)) then block.dy=-speed end
	    if (btnp(3)) then block.dy= speed end
            
	    -- stay pointing in movement direction
	    if block.dx < 0 then
	       block.left = -1
	       block.top = 0
	    end
	    if block.dx > 0 then
	       block.left = 1
	       block.top = 0
	    end
	    
	    if block.dy < 0 then
	       block.top = -1
	       block.left = 0
	    end
	    if block.dy > 0 then
	       block.top = 1
	       block.left = 0
	    end
	 end
      end
   end

   for block in all(blocks) do
      -- Move in the desired direction
      if not try_to_move( block ) then
	 block.x = block.x + block.dx
	 block.y = block.y + block.dy

	 if block.you and about_to_move then
	    sfx(0)
	    add( sparkles, { x = block.x, y = block.y, kind = 64,
			     dx = -block.dx / 4, dy = -block.dy / 4, time = time() } )
	    about_to_move = false
	 end
      end
      
      -- stop when we make it to a square
      if (block.x) % 8 == 0 then
	 block.dx = 0
      end
      if (block.y) % 8 == 0 then
	 block.dy = 0
      end
   end

   if about_to_move then
      sfx(2)
      about_to_move = false
   end
   
   for sparkle in all(sparkles) do
      sparkle.x = sparkle.x + sparkle.dx
      sparkle.y = sparkle.y + sparkle.dy
      
      if time() > sparkle.time + sparkle_duration then
	 del( sparkles, sparkle )
      end
   end

   -- check if we have won
   for block in all(blocks) do
      if block.you then
	 for other in all(blocks) do
	    if other.win then
	       if block.x == other.x and block.y == other.y then
		  change_state("won")
	       end
	    end
	 end
      end
   end
   
end

function _update_won()
end


function _draw_playing()
   camera (0, 0)
   rectfill (0,0,127,127,3)

   pal(13,0)

   for sparkle in all(sparkles) do
      spr(sparkle.kind + 16 * flr(4 * (time() - sparkle.time) / sparkle_duration), sparkle.x, sparkle.y)
   end
   
   for block in all(blocks) do
      if block.you then
	 local moving = 0
	 if block.dx != 0 or block.dy != 0 then
	    moving = 1
	 end
	 if block.top != 0 then
	    spr(16 + 32*moving, block.x, block.y, 1, 1, block.left < 0, block.top > 0)
	 else
	    spr(0 + 32*moving, block.x, block.y, 1, 1, block.left < 0, block.top > 0)
	 end
      else
	 spr( idle_animate(block.kind), block.x, block.y, 1, 1 )
      end
   end
end

function print_center(str,y,col)
   local width = 4 * #str
   local x = 64 - 2 * #str
   print(str, x, y, col)   
end

function _init_won()
end

function _draw_won()
   _draw_playing()
   print_center("YOU WON",63,7)
end

updaters = {
   playing = _update_playing,
   title = _update_title,
   won = _update_won,   
}

drawers = {
   playing = _draw_playing,
   title = _draw_title,
   won = _draw_won,
}

initers = {
   title = _init_title,
   playing = _init_playing,
   won = _init_won,
}

function _update()
   updaters[state]()
end

function _draw()
   drawers[state]()
end

function change_state(s)
   if state == s then
      return
   end
   
   initers[s]()
   state = s
end

function _init()
   change_state("playing")
end

__gfx__
940094943333333356555555000000008888888800066600eeeee88876767cec0000000000000000000000000000000000000000000000000000000000000000
49009d9d3333333356555555005770008888888807776660e88888886ececece0000000000000000000000000000000000000000000000000000000000000000
940097e73333333366666666005777708888888876565565e88778887c7777ec0000000000000000000000000000000000000000000000000000000000000000
49009999333333335555565500577770888888887575555de88887826e7ecec20000000000000000000000000000000000000000000000000000000000000000
94949490333333335555565500500770888888886655655de87777827c7cece10000000000000000000000000000000000000000000000000000000000000000
0994949033333333555556550050000088888888665556d088788782ce7ecec20000000000000000000000000000000000000000000000000000000000000000
099999903333333366666666005dd00088888888066555d088777782ec7777e10000000000000000000000000000000000000000000000000000000000000000
070000703333333356555555000000008888888800065d0088888882cececec20000000000000000000000000000000000000000000000000000000000000000
4d790000333333330000000000000000cccccccc0007770077777eeeecece1210000000000000000000000000000000000000000000000000000000000000000
99e99997333333330000000000577770cccccccc055766607eeeeeeec21212120000000000000000000000000000000000000000000000000000000000000000
4d794490333333330000000000577770cccccccc776565667e7777eee12121210000000000000000000000000000000000000000000000000000000000000000
99999990333333330000000000577770cccccccc7655555d7e7ee7edc21212120000000000000000000000000000000000000000000000000000000000000000
00004490333333330000000000500000cccccccc6555655d7e7777ede127772d0000000000000000000000000000000000000000000000000000000000000000
00009990333333330000000000500000cccccccc665556ddee7ee7ed121712150000000000000000000000000000000000000000000000000000000000000000
494949973333333300000000005dd000cccccccc06655dd0ee7ee7ed2127772d0000000000000000000000000000000000000000000000000000000000000000
94949000333333330000000000000000cccccccc0666dd00eeeeeeed121212150000000000000000000000000000000000000000000000000000000000000000
94009494333333330000000000000770bbbbbbbb0007770066666ccc66666ccc0000000000000000000000000000000000000000000000000000000000000000
49009d9d333333330000000000577770bbbbbbbb007766606ccccccc6ccccccc0000000000000000000000000000000000000000000000000000000000000000
940097e7333333330000000000577770bbbbbbbb076655606c777ccc677cc77c0000000000000000000000000000000000000000000000000000000000000000
49009999333333330000000000577000bbbbbbbb655555506c7cc7cd67c7c7c60000000000000000000000000000000000000000000000000000000000000000
94949490333333330000000000500000bbbbbbbb6655555d6c777ccd677cc77d0000000000000000000000000000000000000000000000000000000000000000
09949490333333330000000000500000bbbbbbbb656555ddcc7cc7cdc7c7c7c60000000000000000000000000000000000000000000000000000000000000000
909999093333333300000000005dd000bbbbbbbb06655dddcc777ccdc77cc77d0000000000000000000000000000000000000000000000000000000000000000
70000007333333330000000000000000bbbbbbbb0065dd00cccccccdcccccccd0000000000000000000000000000000000000000000000000000000000000000
4d7900973333333300000000000000000000000000777000ddddd222ddddd2220000000000000000000000000000000000000000000000000000000000000000
99e999003333333300000000005777700000000007777550d2222222d22222220000000000000000000000000000000000000000000000000000000000000000
4d7944903333333300000000005777700000000077666655d2722222d72227220000000000000000000000000000000000000000000000000000000000000000
999999903333333300000000005777700000000065655755d2722221d72227210000000000000000000000000000000000000000000000000000000000000000
00004490333333330000000000500000000000006556555dd2777221d77227710000000000000000000000000000000000000000000000000000000000000000
00009990333333330000000000500000000000006665556d22722721272727260000000000000000000000000000000000000000000000000000000000000000
494949003333333300000000005dd0000000000006555dd022777221277227710000000000000000000000000000000000000000000000000000000000000000
94949097333333330000000000000000000000000065dd0022222221222222210000000000000000000000000000000000000000000000000000000000000000
00000000666665550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000655555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000655555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000070006555555d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000006555555d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000005555555d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000060605050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000605050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00060600050505050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000605050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000606000505050d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000505050d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005000505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00500050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005000505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00500050500050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05000005005000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00500050500050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000005000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000028003030303000000000000000000000080030303030000000000000000000000800303030300000000000000000000008000030303000000000000000000030000000000000000000000000000000300000000000000000000000000000003000000000000000000000000000000030000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101020301010105050202030200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201000101020105010505050202260200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101022601050101050202260200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201020202022601010106010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010106161601010126010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0203010101010101010106060126010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010101360106010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010101010101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010101010101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010404040101010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010401040401010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010404040401010101010200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0202020202020202020202020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000200001c0300f0201a010080100000002000020000200000000220001d000170000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002e5501c510350601b5202d5401a0501d040210402b0402d0402b030200201f01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100002561025610083200d3202d4400e3600e33006650066500665006650066500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000200000205002050020500000000000000000000002050020500205000000000000000000000010500205002050000000000000000000000000000000000000000000000000000000000000000000000000000
00040000372602b2601a2400b22006220022100121002210052100922010240162602027035270392700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
